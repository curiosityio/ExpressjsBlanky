sudo: required
language: node_js
node_js:
  - "10" # also change in docker files
services:
  - docker
env:
  global:        
    - DOCKER_COMPOSE_VERSION=1.24.1
    - STAGING_DEPLOY_USER=core
    - STAGING_DEPLOY_HOST=111.111.111.111
    - PROD_DEPLOY_USER=core
    - PROD_DEPLOY_HOST=222.222.222.222
    # AWS_ACCESS_KEY_ID
    - secure: "fefefe"
    # AWS_SECRET_ACCESS_KEY
    - secure: "fefefe"
    # HONEY_BADGER_API_KEY
    - secure: "fefefe"
    # DANGER_GITHUB_API_TOKEN
    - secure: "fefefe"
before_install:
  # Install docker compose custom version.
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - docker-compose version
  # Setup .aws directory for AWS CLI tool to work
  - mkdir ~/.aws
  - printf "%s\n%s\n%s" "[default]" "aws_access_key_id = ${AWS_ACCESS_KEY_ID}" "aws_secret_access_key = ${AWS_SECRET_ACCESS_KEY}" > ~/.aws/credentials
  - printf "%s\n%s\n%s" "[default]" "region = us-east-1" "output = json" > ~/.aws/config
  - sudo chmod 444 ~/.aws/c*
install:
  - npm install
  - bundle install
cache:
  bundler: true 
  directories:
    - node_modules
before_script:
  # Disable services enabled by default
  # https://stackoverflow.com/a/27410479/1486374
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop  

jobs:
  include:
    - stage: danger
      script: danger --fail-on-errors=true
    - stage: tests
      script: ruby bin/ci/tests.rb
    - # tests 
      script: ruby bin/ci/test_docker_container.rb    
    - stage: deploy
      script: ruby ./bin/ci/deploy.rb

stages:
  - name: tests 
    if: type IN (pull_request, push) AND tag IS blank
  - name: danger
    if: type IN (pull_request)
  - name: deploy
    if: tag IS present
