name: On push and PR
on: [push, pull_request]

env:
  CICI_DECRYPT_KEY: ${{ secrets.CICI_DECRYPT_KEY }}
  CICI_DECRYPT_IV: ${{ secrets.CICI_DECRYPT_IV }}
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  # --------- The below entries need to be created as secrets -------------
  # CODECOV_TOKEN - codecov.io token for repository. Used for test coverage.
  # CICI_DECRYPT_KEY
  # CICI_DECRYPT_IV

jobs:
  # lint:
  #   name: Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Cache node_modules
  #       uses: actions/cache@v2
  #       env:
  #         cache-name: cache-node-modules
  #       with:
  #         path: ~/.npm
  #         key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #         restore-keys: |
  #           ${{ runner.os }}-build-${{ env.cache-name }}-
  #     - name: Read .nvmrc
  #       run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
  #       id: nvm
  #     - name: Setup node
  #       uses: actions/setup-node@v2-beta
  #       with:
  #         node-version: '${{ steps.nvm.outputs.NODE_VERSION }}'
      # Disable this because it's meant for travis. 
      # - name: Lint commits 
      #   run: npm i @commitlint/travis-cli @commitlint/config-conventional && npx commitlint-travis
  test:
    name: Test 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Read .nvmrc
        run: echo ::set-output name=NODE_VERSION::$(cat .nvmrc)
        id: nvm
      - name: Setup node
        uses: actions/setup-node@v2-beta
        with:
          node-version: '${{ steps.nvm.outputs.NODE_VERSION }}'
      - name: Install dependencies
        run: npx install-subset install --npm test
      - name: Run tests 
        run: sudo gem install cici && cici decrypt --verbose && npm run test && npx codecov
