apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: {{ .Chart.Name }}
spec:
  strategy:
   rollingUpdate:
     maxSurge: {{ .Values.rollingUpdate.maxSurge }} 
     maxUnavailable: {{ .Values.rollingUpdate.maxUnavailable }} 
   type: RollingUpdate   
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image }} # this value comes from the skaffold.yaml
        imagePullPolicy: {{ .Values.imageConfig.pullPolicy }}
        ports:
        - containerPort: 5000
        resources:
          limits: 
            memory: {{ quote .Values.limits.memory }}
            cpu: {{ quote .Values.limits.cpu }}
          requests: 
            memory: {{ quote .Values.requests.memory }}
            cpu: {{ quote .Values.requests.cpu }}
        readinessProbe:
          httpGet:
            path: /healthcheck
            port: 5000
          initialDelaySeconds: 10
          failureThreshold: 3
          successThreshold: 1
          periodSeconds: 5
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /healthcheck
            port: 5000          
          initialDelaySeconds: 10
          periodSeconds: 15 # Note: Make sure your app's healthcheck beforeShutdown function delay is set to match this. See server file in app source code. 
          failureThreshold: 3
          successThreshold: 1
          # Setting a very low timeout value (e.g. 1 second) can cause false-positive
          # checks and service interruption.
          timeoutSeconds: 5
        volumeMounts:
        - name: {{ .Chart.Name }}-volume-projects
          mountPath: "/app/config/projects.json"
          subPath: projects.json
          readOnly: true
        - name: {{ .Chart.Name }}-volume-dotenv
          mountPath: "/app/.env"
          subPath: .env
          readOnly: true
      # Allow sufficient amount of time (90 seconds = periodSeconds * failureThreshold) in the liveness probe for your app's registered shutdown handlers to run to completion.
      terminationGracePeriodSeconds: 45
      imagePullSecrets:
      - name: regcred
      volumes:
      - name: {{ .Chart.Name }}-volume-projects
        secret:
          secretName: {{ .Chart.Name }}-secret-projects
      - name: {{ .Chart.Name }}-volume-dotenv
        secret:
          secretName: {{ .Chart.Name }}-secret-dotenv
---        
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-service
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: {{ .Chart.Name }}
